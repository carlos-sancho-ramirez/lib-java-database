<?xml version="1.0"?><!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">
    <module name="NewlineAtEndOfFile" />
    <module name="FileTabCharacter" />

    <!-- Trailing spaces -->
    <module name="RegexpSingleline">
      <property name="format" value="\s+$"/>
      <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- Space after 'for' and 'if' -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*(for|if)\b[^ ]" />
        <property name="message" value="Space needed before opening parenthesis." />
    </module>

    <module name="TreeWalker">
        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />

        <!-- There are some non-static UPPER_CASE members across the project. One common is:
            public final String TAG = getClass().getSimpleName();
            It cannot be static because then it cannot access "getClass()" but it results in
            an immutable string constant. So it is difficult to decide the proper way to proceed.
            Then, so far. This is disabled -->
        <module name="MemberName">
            <property name="format" value="^_?[a-z][a-zA-Z0-9]*$" />
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
        </module>
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="TypeName" />

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport" />
        <!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="true" />
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace" />
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
        </module>
        <module name="NoWhitespaceBefore" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
        </module>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />


        <!-- Checks for blocks. You know, those {
            }'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock" />
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull"/>
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <module name="IllegalThrows" />
        <module name="FallThrough" />
        <module name="UnnecessaryParentheses" />

        <!-- Not working for current nullable implementation, so it has to be disabled -->
        <module name="FinalClass"/>

        <module name="HideUtilityClassConstructor" />

        <!-- <module name="VisibilityModifier"/> -->
        <module name="MutableException">
        <!-- Extend MutableException to enforce immutable events as well -->
            <property name="format" value="^.*Exception$|^.*Error$|^.*Event$" />
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <module name="UpperEll" />

        <!-- Lambdas are not properly checked so far. This is why this is disabled -->
        <module name="Indentation">
            <property name="caseIndent" value="4" />
            <property name="arrayInitIndent" value="8"/>
        </module>

        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="tokens" value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, CTOR_DEF, VARIABLE_DEF" />
        </module>
    </module>
</module>
